I"<p>Python supports the usual logical conditions from mathematics:</p>

<ul>
  <li>Equals: a == b</li>
  <li>Not Equals: a != b</li>
  <li>Less than: a &lt; b</li>
  <li>Less than or equal to: a &lt;= b</li>
  <li>Greater than: a &gt; b</li>
  <li>Greater than or equal to: a &gt;= b</li>
</ul>

<p>These conditions can be used in different ways by loops and If statements. Implementation an if statement can be made using the keyword <code class="language-plaintext highlighter-rouge">if</code></p>

<pre><code class="language-python3">&gt;&gt;&gt; a = 33
&gt;&gt;&gt; b = 200
&gt;&gt;&gt; if b &gt; a:
...     print("b is greater than a")
...
b is greater than a
</code></pre>

<p><img src="./if_case.gif" alt="if operator" /></p>

<h3 id="note">Note</h3>

<ul>
  <li>Python relies on indentation (whitespace at the beginning of a line) to define scope in the code. Other programming languages often use curly-brackets for this purpose.</li>
  <li>You can have if statements inside if statements, this is called nested if statements.</li>
</ul>

<pre><code class="language-python3">if x &gt; 10:
 print("Above ten,")
 if x &gt; 20:
   print("and also above 20!")
 else:
   print("but not above 20.")
</code></pre>

<ul>
  <li>if you for some reason have an <code class="language-plaintext highlighter-rouge">if</code> statement with no content, put in the pass statement to avoid getting an error.</li>
</ul>

<pre><code class="language-python3">a = 33
b = 200

if b &gt; a:
  pass
</code></pre>

<ul>
  <li>The or keyword is a logical operator, and is used to combine conditional statements:</li>
</ul>

<pre><code class="language-python3">a = 200
b = 33
c = 500
if a &gt; b or a &gt; c:
  print("At least one of the conditions is True")
</code></pre>

<ul>
  <li>The and keyword is a logical operator, and is used to combine conditional statements:</li>
</ul>

<pre><code class="language-python3">a = 200
b = 33
c = 500
if a &gt; b and c &gt; a:
  print("Both conditions are True")
</code></pre>

<h1 id="elif">Elif</h1>

<p>The elif keyword is pythons way of saying “if the previous conditions were not true, then try this condition”. You can multiple numbers of <code class="language-plaintext highlighter-rouge">elif</code> in <code class="language-plaintext highlighter-rouge">if</code> statement</p>

<pre><code class="language-python3">a = 33
b = 33
if b &gt; a:
  print("b is greater than a")
elif a == b:
  print("a and b are equal")
</code></pre>

<h1 id="else">Else</h1>

<p>The else keyword catches anything which isn’t caught by the preceding conditions.</p>

<pre><code class="language-python3">a = 200
b = 33
if b &gt; a:
  print("b is greater than a")
elif a == b:
  print("a and b are equal")
else:
  print("a is greater than b")
</code></pre>

<ul>
  <li>You can also have an else without the elif:</li>
</ul>

<h1 id="ternary-operators">Ternary Operators</h1>

<p>You can put it all on the same line, if you have only one statement to execute or one for if, and one for else</p>

<p><img src="./terninary.gif" alt="ternary operator" /></p>

<p><a href="#">Top</a></p>
:ET