I"”<p>Synatx</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#! /bin/bash</span>

<span class="k">if</span> <span class="o">[</span> conditions <span class="o">]</span>
<span class="k">then
    </span>statement
<span class="k">fi</span>


</code></pre></div></div>

<h1 id="operators">Operators</h1>

<p>String Comparisons:</p>

<table>
  <thead>
    <tr>
      <th>Operator</th>
      <th>Usage</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>=</td>
      <td>compare if two strings are equal</td>
    </tr>
    <tr>
      <td>!=</td>
      <td>compare if two strings are not equal</td>
    </tr>
    <tr>
      <td>-n</td>
      <td>evaluate if string length is greater than zero</td>
    </tr>
    <tr>
      <td>-z</td>
      <td>evaluate if string length is equal to zero</td>
    </tr>
  </tbody>
</table>

<p>Number Comparisons:</p>

<table>
  <thead>
    <tr>
      <th>Operator</th>
      <th>Usage</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>-eq</td>
      <td>compare if two numbers are equal</td>
    </tr>
    <tr>
      <td>-ge</td>
      <td>compare if one number is greater than or equal to a number</td>
    </tr>
    <tr>
      <td>-le</td>
      <td>compare if one number is less than or equal to a number</td>
    </tr>
    <tr>
      <td>-ne</td>
      <td>compare if two numbers are not equal</td>
    </tr>
    <tr>
      <td>-gt</td>
      <td>compare if one number is greater than another number</td>
    </tr>
    <tr>
      <td>-lt</td>
      <td>compare if one number is less than another number</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>Instead of operators , symbols can be also used in inside double parentheses for integers and double square brackets for strings.</li>
</ul>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="o">((</span> 10 <span class="o">&gt;</span> 5 <span class="o">))</span>

</code></pre></div></div>

<p>Example</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c">#! /bin/bash</span>

<span class="nv">VAR</span><span class="o">=</span>10

<span class="k">if</span> <span class="o">((</span> <span class="nv">$VAR</span> <span class="o">&gt;=</span> 10 <span class="o">))</span>
<span class="k">then
  </span><span class="nb">echo</span> <span class="s2">"condition satisfied"</span>
<span class="k">fi</span>
</code></pre></div></div>

<h1 id="if-else">if-else</h1>

<p>Synatx</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#! /bin/bash</span>

<span class="k">if</span> <span class="o">[</span> conditions <span class="o">]</span>
<span class="k">then
    </span>statement
<span class="k">elif</span> <span class="o">[</span> conditions <span class="o">]</span>
<span class="k">then
    </span>statement
<span class="k">else
    </span>statement
<span class="k">fi</span>


</code></pre></div></div>
<p>example</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="c">#! /bin/bash</span>

<span class="nb">read</span> <span class="nt">-p</span> <span class="s2">"Enter a number: "</span> VAR

<span class="k">if</span> <span class="o">[</span> <span class="nv">$VAR</span> <span class="o">==</span> 10 <span class="o">]</span>
<span class="k">then
  </span><span class="nb">echo</span> <span class="s2">"condition satisfied"</span>
<span class="k">elif</span> <span class="o">[</span> <span class="nv">$VAR</span> <span class="o">==</span> 11 <span class="o">]</span>
<span class="k">then
  </span><span class="nb">echo</span> <span class="s2">"condition satisfied"</span>
<span class="k">else
  </span><span class="nb">echo</span> <span class="s2">"condition not satisfied"</span>

<span class="k">fi</span>

</code></pre></div></div>

<p><a href="/bash_beginner">Back</a></p>
:ET